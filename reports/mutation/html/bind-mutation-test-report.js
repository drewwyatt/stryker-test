document.querySelector('mutation-test-report-app').report = {"files":{"/Users/drewwyatt/Projects/stryker-test/src/index.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":79,"line":4},"start":{"column":22,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"1","location":{"end":{"column":78,"line":4},"start":{"column":15,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4","location":{"end":{"column":2,"line":12},"start":{"column":26,"line":6}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"3","location":{"end":{"column":66,"line":4},"start":{"column":58,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2","location":{"end":{"column":55,"line":4},"start":{"column":51,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"6","location":{"end":{"column":19,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"5","location":{"end":{"column":19,"line":7},"start":{"column":12,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"7","location":{"end":{"column":18,"line":9},"start":{"column":12,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"8","location":{"end":{"column":19,"line":10},"start":{"column":12,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"9","location":{"end":{"column":17,"line":11},"start":{"column":12,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { Person, isAdult, toPerson } from './person'\n\nconst printIsAdult = (person: Person) =>\n  console.log(`${person.name} ${isAdult(person) ? 'is' : 'is not'} an adult.`)\n\nconst people: Person[] = [\n  toPerson('Steve', 30),\n  toPerson('Nancy', 12),\n  toPerson('Carl', 18),\n  toPerson('Carla', 45),\n  toPerson('Ben', 10),\n]\n\npeople.forEach(printIsAdult)\n"},"/Users/drewwyatt/Projects/stryker-test/src/person.ts":{"language":"typescript","mutants":[{"id":"10","location":{"end":{"column":60,"line":6},"start":{"column":24,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"CompileError"},{"id":"11","location":{"end":{"column":60,"line":6},"start":{"column":44,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"12","location":{"end":{"column":60,"line":6},"start":{"column":44,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"13","location":{"end":{"column":57,"line":6},"start":{"column":55,"line":6}},"mutatorName":"EqualityOperator","replacement":"<","status":"Killed"},{"id":"14","location":{"end":{"column":57,"line":6},"start":{"column":55,"line":6}},"mutatorName":"EqualityOperator","replacement":">","status":"Killed"},{"id":"15","location":{"end":{"column":71,"line":8},"start":{"column":25,"line":8}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"16","location":{"end":{"column":70,"line":8},"start":{"column":57,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"export type Person = {\n  name: string\n  age: number\n}\n\nexport const isAdult = (person: Person) => person.age >= 18\n\nexport const toPerson = (name: string, age: number) => ({ name, age })\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};